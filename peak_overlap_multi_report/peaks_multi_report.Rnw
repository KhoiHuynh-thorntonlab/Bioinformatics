% ~~~~~~~~~~~~~~~~~~~~~~~
% 
% AutoReportLite analysis pipeline & reporting template
% by Stephen Kelly
% April 29, 2016
%
% ~~~~~~~~~~~~~~~~~~~~~~~~
\documentclass[8pt]{beamer} % start LaTeX document
% set up parameters in R for use in the document
<<setup, include=FALSE>>=
# % always need this code chunk for RNW files compiled with knitr, never mess with it unless you are a wizard
# this sets knitr options for the document
opts_chunk$set(fig.path='figure/beamer-',fig.align='center',fig.show='hold',size='footnotesize')
@
%
<<report_setup,echo=FALSE,engine='R',eval=TRUE>>=
#
# SET THESE FILE PATHS & ENTRIES MANUALLY !! 
#

suppressPackageStartupMessages(library("Hmisc")) # need for latexTranslate()
suppressPackageStartupMessages(library(xtable)) # needed to print the sample sheet

Project_ID_short<-latexTranslate("Peak Overlap-ALL-H3K4ME3") # for the sidebar
Project_ID<-latexTranslate("SmithLab_ChIP-Seq_2016-03-31 Peaks per Patient per H3K4ME3 Mark; All Parameters ") # for the title slide
Report_author<-latexTranslate("Stephen Kelly")
PI_name<-latexTranslate("Dr. Smith")
Report_author_email<-latexTranslate("stephen.kelly@nyumc.org")

# ProjDir<-"/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/project_notes/peak_overlap/peaks_per_patient_per_mark_merged"
# pipelineDir<-paste0(ProjDir,"/analysis_pipeline")
pipelineDir<-"/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/project_notes/peak_overlap/peaks_per_patient_per_mark-MULTI_REPORT/peak_overlaps"
# get the sample subdirs
# # don't include dirs with the name "report"
sampleDirs<-grep(x = list.dirs(path = pipelineDir,full.names = TRUE,recursive = FALSE),pattern = "report",value = TRUE,invert = TRUE)
# dir(pipelineDir,pattern = "[^report]")[file.info(dir(pipelineDir,pattern = "[^report]"))$isdir]
# SampleSheet_file<-"/ifs/home/kellys04/AutoReportLite/sample-sheet.tsv"

@

% the peak overlap pipeline to run in bash...  !! need bash 4; not present on OS X !!
<<peak_overlap_pipeline,engine='bash',echo=FALSE,include=FALSE,eval=TRUE>>=
# common items 
# out Gencode TSS regions bed file
gen_bed="/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/project_data2/gencode.v19.annotation_TSSd500_10kbp.bed"
# dir with the peak calling results
pipeline_peaks_dir="/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/pipeline/peaks"
# script for the venn diagrams
venn_script="/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/project_notes/code/multi_peaks_Venn.R"
chmod +x "$venn_script"
# script for the UpSet plots
UpSet_script="/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/project_notes/code/multi_peaks_UpSet_plot.R"
chmod +x "$UpSet_script"
# outdir for all overlap sets
main_outdir="/ifs/home/kellys04/projects/SmithLab_ChIP-Seq_2016-03-31/project_notes/peak_overlap/peaks_per_patient_per_mark-MULTI_REPORT/peak_overlaps"
mkdir -p "$main_outdir"
cd "$main_outdir"

# make array items to hold the outdirs, peak files sets
unset outdir_array; unset files_array
declare -A outdir_array
declare -A files_array

# set the array itesm for each combination
# # FOR THE PEAK CALLING RESULTS WITH THE ORIGINAL DEFAULT SETTINGS
outdir_array["default"]="peaks_per_patient_per_mark"
files_array["default"]=$(find $pipeline_peaks_dir/results/ -name "peaks.bed" -path "*/*group*broad/*" -path "*/*H3K4ME3*/*" ! -path "*/*SAH*/*" ! -path "*/*group*broad-cutoff005*/*" ! -path "*/*H3K9ME3*/*" ! -path "*/*INPUT*/*")

# # FOR THE PEAKS WITH THE NEW CUT OFF VALUES
outdir_array["cutoff005"]="peaks_per_patient_per_mark-cutoff005"
files_array["cutoff005"]=$(find $pipeline_peaks_dir/results/ -name "peaks.bed" -path "*/*group*broad-cutoff005*/*" -path "*/*H3K4ME3*/*" ! -path "*/*SAH*/*" ! -path "*/*H3K9ME3*/*" ! -path "*/*INPUT*/*")

# # For the cutoff0025
outdir_array["cutoff0025"]="peaks_per_patient_per_mark-cutoff0025"
files_array["cutoff0025"]=$(find $pipeline_peaks_dir/results/ -name "peaks.bed" -path "*/*group*broad-cutoff0025*/*" -path "*/*H3K4ME3*/*" ! -path "*/*SAH*/*" ! -path "*/*H3K9ME3*/*" ! -path "*/*INPUT*/*")

# # for the broad-cutoff0005
outdir_array["cutoff0005"]="peaks_per_patient_per_mark-cutoff0005"
files_array["cutoff0005"]=$(find $pipeline_peaks_dir/results/ -name "peaks.bed" -path "*/*group*broad-cutoff0005*/*" -path "*/*H3K4ME3*/*" ! -path "*/*SAH*/*" ! -path "*/*H3K9ME3*/*" ! -path "*/*INPUT*/*")

# # for the broad-cutoff001
outdir_array["cutoff001"]="peaks_per_patient_per_mark-cutoff001"
files_array["cutoff001"]=$(find $pipeline_peaks_dir/results/ -name "peaks.bed" -path "*/*group*broad-cutoff001*/*" -path "*/*H3K4ME3*/*" ! -path "*/*SAH*/*" ! -path "*/*H3K9ME3*/*" ! -path "*/*INPUT*/*")



# test the array..
for key in ${!outdir_array[@]}; do
  echo "key is ${key}"
  # get the output dir
  overlap_dir=${outdir_array[${key}]}
  echo -e "outdir is:\n${overlap_dir}"
  
  
  # get the peak files
  FILES=${files_array[${key}]}
  echo -e "peak files:" 
  echo $FILES | tr " " "\n"
  echo -e "\n"
  
done


# iterate over the arrays
# for key in in ${!outdir_array[@]}; do
for key in ${!outdir_array[@]}; do
  echo "key is $key"
  # get the output dir
  overlap_dir=${outdir_array[${key}]}
  echo -e "outdir is:\n${overlap_dir}"
  
  
  # get the peak files
  FILES=${files_array[${key}]}
  echo -e "peak files:" 
  echo $FILES | tr " " "\n"
  echo -e "\n"
  
  # run the overlap pipeline
  for i in $FILES; do 
    # (
    # reset the pwd
    # mkdir -p "$overlap_dir"
    # cd "$overlap_dir"
    cd "$main_outdir"
    
    # parent dir of the peaks.bed file
    tmp_dir=$(dirname "$i")
    tmp_name=$(basename "$tmp_dir")
    # get the Sample and the Histone mark items from the dir name; e.g. SPN-R-H3K4ME3
    tmp_Sample=$(echo $tmp_name | cut -d '-' -f1); echo "tmp_Sample is $tmp_Sample"
    tmp_Mark=$(echo $tmp_name | cut -d '-' -f3); echo "tmp_Mark is $tmp_Mark"
    
    # !! !! DIFFERENT OUTDIR'S !! 
    # make the outdir for the sample, subdir per key
    tmp_outdir="${main_outdir}/${tmp_Sample}/${key}"
    mkdir -p "$tmp_outdir"
    cd "$tmp_outdir"
    echo -e "tmp_outdir is:\n$tmp_outdir"
    
    # set the name of the peak file to output
    tmp_peaks="${tmp_name}.bed"; echo "tmp_peaks output is $tmp_peaks"; echo -e "pwd is ${PWD}\n"
    # echo "$tmp_peaks"
    
    # if the output peak files doesn't exist, then copy the source peak file to the outdir with the new name
    if [ ! -f ${tmp_peaks} ]; then
      echo -e "Copying file:\n${tmp_outdir}/${tmp_peaks} \n"
      /bin/cp -f "$i" "${tmp_outdir}/${tmp_peaks}"
    else
      echo -e "File already exists:\n${tmp_outdir}/${tmp_peaks} \n"
    fi
    
    # check if both of the bed files we need exist
    if [ -f ${tmp_Sample}-D-${tmp_Mark}.bed ] && [ -f ${tmp_Sample}-R-${tmp_Mark}.bed ]; then
      echo "both files present; files are:"
      ls ${tmp_Sample}-[DR]-${tmp_Mark}.bed
      
      # check if the venn.txt exists; means that mergePeaks already ran
      if [ ! -f venn.txt ]; then
        echo "venn.txt doesn't exist; running mergePeaks"
        module load homer/v4.6
        mergePeaks ${tmp_Sample}-[DR]-${tmp_Mark}.bed -prefix mergepeaks -venn venn.txt -matrix matrix.txt
      fi
      
      # check if the venn text exists.
      # if [ -f venn.txt ]; then
        # make the venn plot
        echo "Making venn diagram.."
        module unload r
        module load r/3.2.0
        "$venn_script" "${tmp_Sample}-${key}" venn.txt
        
        # make the UpSet plot
        # module unload r
        # module load r/3.3.0
        # "$UpSet_script" "${tmp_Sample}-${key}" venn.txt
        # DONT USE THIS FOR THE PAIRWISE ONLY OVERLAPS
        
      # fi
    fi
  # ) & done
  done
done

@
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% LaTeX settings start here:
\listfiles % get versions of files used for document compliaton, written at the end of the .log file for the report compilation!
\geometry{paperwidth=150mm,paperheight=105mm} % larger page size than normal for larger plots and more flexibility with font sizes
%\documentclass[8pt,xcolor={dvipsnames}]{beamer}
\setcounter{secnumdepth}{3} % how many levels deep before section headers stop getting numbers
\setcounter{tocdepth}{3} % table of contents depth
\usepackage{breakurl}
\usepackage{cite} % for citations, BibTeX I think
\usepackage{etoolbox} % this was not installed on HPCF, its in my home dir right now!! % has extra tools for LaTeX forloops, etc.; might not actually need this, use R loops to cat() LaTeX markup instead, much easier!
% \usepackage{forloop} % for LaTeX for loops; easier to use R loops to 'cat' TeX into the document instead!!
% \usepackage{tikz} % for custom graphics
%\usepackage{subcaption} %for subfigures%
% \usepackage{amsmath} % for math characters
\usepackage{graphicx} % good for advanced graphics options
\usepackage{tabularx} % for fancy table settings..
\usepackage{url} % for typesetting URLs, also file paths? 
\usepackage[multidot]{grffile} % support for image files with multiple '.' in the name
% \usepackage{adjustbox} % for auto-size box to put sample sheet into, also needs collectbox.sty
% \usepackage[usenames,dvipsnames]{color}
%%%%%%%%%%%%%experimental for xtable italics http://stackoverflow.com/questions/7996968/formatting-sweave-tables-two-challenges
% \usepackage{longtable} % allows for tables that break across pages
% \SweaveOpts{keep.source=TRUE}  % Keeps formatting of the R code.
%%%%%%%%%%%%%%%%%%%
%
% ~~~~~~ BEAMER SPECIFIC SETTINGS ~~~~~~~~ %
\makeatletter % turn on the '@' command character; needs to come before beamer settings
% \usetheme{Hannover} %  \usetheme{PaloAlto} % Bergen
% \usetheme[left]{Marburg} %  width= % hideothersubsections
\usetheme[left,hideothersubsections,width=3cm]{Marburg} %  width= % hideothersubsections
% location installed themes and such: /usr/share/texmf/tex/latex/beamer
\addtobeamertemplate{navigation symbols}{}{ % % this adds the page numbers at the bottom of the slide
    \usebeamerfont{footline}%
    \usebeamercolor[fg]{footline}%
    \hspace{1em}%
    \insertframenumber/\inserttotalframenumber
}
\makeatother % turn off the '@' command character; needs to come after beamer settings
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
% \graphicspath{/home/varitint/Dropbox/Lab/Teaching/Genomics_Class/Genomics_Lesson3_R!/With_embedded_R_code/figure/} % default path to find figures
%
%%%%%%%%%%
\begin{document}
% Create the Title page
\title[\Sexpr{Project_ID_short}]{\Sexpr{Project_ID} \\ Quality Metrics \\ \tiny{\Sexpr{latexTranslate(pipelineDir)}}}
\author{\Sexpr{Report_author}}
\institute{\normalsize Dr. Aristotelis Tsirigos \\ PI: \Sexpr{PI_name} \\ Genome Technology Center, \\ NYU Langone Medical Center, New York, NY 10016}
\date{\texttt{\Sexpr{Report_author_email}} \\ \today}
\titlegraphic{\includegraphics[width=0.25\textwidth]{figure/NYULMC_white}} % image to show on the title slide
\maketitle

% REPORT STARTS HERE!
%
<<print_samplesheet,results='asis',echo=FALSE,eval=FALSE>>=
#
# PRINT THE SAMPLE SHEET
# SKIP THE SAMPLE SHEET!

# read in the sample sheet
PipelineSampleSheet<-read.table(file =SampleSheet_file,header = T,sep = "\t" )

# split the dataframe into smaller 50 row dataframes to fit on the page better
tmpdf<-split(PipelineSampleSheet,(seq_len(nrow(PipelineSampleSheet))-1) %/%50)

# print the section heading
cat("\\section{", "Sample Sheet", "}\n", sep="") 

# print each sub-df
for(i in seq_along(tmpdf)){
  # print(nrow(tmpdf[[i]]))
  cat("\\begin{frame}{"," Analysis Sample Sheet}\n", sep="") 
  # don't include the fields with long file paths; adjust the scalebox as needed
  print(xtable(x = tmpdf[[i]][,grep("^R|^ref",colnames(tmpdf[[i]]),invert = T)]),size="\\footnotesize",scalebox = 1.3)

  cat("\\end{frame}\n\n") 
}

@

<<print_samples,results='asis',echo=FALSE,eval=TRUE>>=
for(i in seq_along(sampleDirs)){
  # make a new section label per sample
  # tmpSampleID<-basename(tmpSampleDir)
  tmpSampleID<-basename(sampleDirs[i])
  cat("\\section{", latexTranslate(tmpSampleID), "}\n", sep="") 
  # latexTranslate(getwd())
  
  
  
  #     # print(tmpSampleDir)
  #   
  #   # get the PDFs in subdirecotry
  #   tmpSamplePDF_files<-dir(tmpSampleDir,pattern = "*.pdf")
  #   # print(tmpSamplePDF_files)
  #     
  #   # get the sample subdirecotry
  #   # tmpSampleDir<-sampleDirs[i]
  
  
  tmpSampleSubDirs<-dir(sampleDirs[i])
  
  for(k in seq_along(tmpSampleSubDirs)){
    # get the PDFs
    tmpSampleSubDirPDF_files<-dir(paste0(sampleDirs[i],"/",tmpSampleSubDirs[k]),pattern = "*.pdf")
    # print(tmpSampleSubDirPDF_files)
    
    for(q in seq_along(tmpSampleSubDirPDF_files)){
      tmpPDF<-tmpSampleSubDirPDF_files[q]
      # print the subsetion
      # shorten the label by removing the sample ID from it
      tmpFigureID<-gsub(pattern = paste0(tmpSampleID,"-"),replacement = "",x = tmpPDF,fixed = TRUE)
      cat("\\subsubsection{", latexTranslate(tmpFigureID), "}\n", sep="")
      
      # begin a new beamer frame
      cat("\\begin{frame}{", latexTranslate(tmpFigureID), " }\n", sep="")
      
      # write the full file path
      # cat("\\scriptsize{", latexTranslate(paste0(tmpSampleDir,"/",tmpPDF)), "}\n", sep="") 
      
      # print the figure
      cat("\\includegraphics[width=0.9\\linewidth,height=0.9\\textheight,keepaspectratio]{", paste0(sampleDirs[i],"/",tmpSampleSubDirs[k],"/",tmpPDF), "}\n", sep="")
      
      # end the beamer frame
      cat("\\end{frame}\n\n")
    }
  }
}

  
#   # PRINT THE STATS
#   # # get the stats file
#   tmpAlignStatsFile<-dir(tmpSampleDir,pattern = "venn_summary.tsv",full.names = TRUE)
#   # read in the file
#   tmpAlignStats<-scan(file =tmpAlignStatsFile,character(0), sep = "\n")
#   # print it in a new frame
#   cat("\\subsubsection{", latexTranslate("Stats"), "}\n", sep="")
#   cat("\\begin{frame}{", latexTranslate("Stats"), " }\n", sep="")
#   cat("\\small{",sep = "\n")
#   cat(latexTranslate(tmpAlignStats),sep = "\n\n")    
#   cat("}\n",sep = "\n")
#   cat("\\end{frame}\n\n")
  
  # PRINT THE FIGURES
  # make a new subsection per figure

# }

@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Session Information}
% \begin{frame}{System and Session Information}
% \begin{frame}[fragile]{System and Session Information}
% \small{This report was prepared using the AutoReportLite template, available at \url{https://github.com/stevekm/AutoReportLite}}
<<Session>>=
system('uname -srv',intern=T)
sessionInfo()
save.image(compress = TRUE)
@
\scriptsize{\LaTeX{} version: \LaTeXe~ \fmtversion}
% \end{frame}
\end{document}
